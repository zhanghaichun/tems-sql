DROP PROCEDURE IF EXISTS SP_SPLIT_QUANTITY_DETAILS;
CREATE PROCEDURE SP_SPLIT_QUANTITY_DETAILS()

BEGIN

  /**
   * @deprecated
   * 将 tariff, contract report 中的 Qty / Total Volumn 字段的值拆到两个对应的字段.
   * 目前只支持固定几种格式的分割符号， 如果分割符号发生改变，需要通知我们，我们来
   * 兼容相应的程序。
   *
   * 例如： tariff_origin_rate_rules 表中的 quantity_details 就会被拆分到 quantity_begin 
   *        和 quantity_end 字段中。
   *
   * 约定：
   * 1. 分割符号两边最多可以有一个空格。
   * 2. 如果使用的是 '-' 分隔符， 那么两边必须都有数字。
   */
  DECLARE PLUS_SPLIT_SYMBOL CHAR(1) DEFAULT '+';
  DECLARE TO_SPLIT_SYMBOL CHAR(1) DEFAULT '-';
  DECLARE LOWER_SPLIT_SYMBOL CHAR(1) DEFAULT '<';
  DECLARE GREATER_SPLIT_SYMBOL CHAR(1) DEFAULT '>';
  DECLARE LOWER_OR_EQUAL_SPLIT_SYMBOL CHAR(2) DEFAULT '<=';
  DECLARE GREATER_OR_EQUAL_SPLIT_SYMBOL CHAR(2) DEFAULT '>=';
  DECLARE AND_SPLIT_FLAG CHAR(3) DEFAULT 'and';

  DECLARE QUANTITY_BEGIN INT;
  DECLARE QUANTITY_END INT;

  DECLARE QUANTITY_DETAILS_ITME VARCHAR(64);
  DECLARE RATE_RULE_ID INT;

  /**
   * 如果有 'and' 符号进行分割，那么两边就会有多种分隔符，
   * 则需要更多地判断。
   * 如： >= 24 and <= 48
   */
  DECLARE FRONT_RANGE_ITEM VARCHAR(10);
  DECLARE BACK_RANGE_ITEM VARCHAR(10);

  DECLARE CURSOR_DONE_FLAG BOOLEAN DEFAULT FALSE;
  
  DECLARE QUANTITY_DETAILS_CURSOR CURSOR FOR
    SELECT id, quantity_details 
    FROM tariff_origin_rate_rules
    WHERE key_field LIKE '%Qty%'
      AND quantity_begin IS NULL
      AND quantity_end IS NULL;

    /*UNION

    SELECT volumn_details
    FROM contract_origin_rate_rules
    WHERE key_field LIKE '%Volumn%';*/

  DECLARE CONTINUE HANDLER FOR NOT FOUND SET CURSOR_DONE_FLAG = TRUE;

  /**
   * 开启游标
   */
  OPEN QUANTITY_DETAILS_CURSOR;

    LABLE1: 
    WHILE NOT CURSOR_DONE_FLAG
    DO -- WHILE 循环开始

      FETCH QUANTITY_DETAILS_CURSOR 
        INTO 
          RATE_RULE_ID, 
          QUANTITY_DETAILS_ITME;

      IF (CURSOR_DONE_FLAG) THEN
        LEAVE LABLE1;
      END IF;

      /**
       * 去掉前后空格
       */
      SET QUANTITY_DETAILS_ITME = TRIM(QUANTITY_DETAILS_ITME);

      IF ( POSITION(PLUS_SPLIT_SYMBOL IN QUANTITY_DETAILS_ITME) ) THEN
        /**
         * + 分割符， 相当于 >=
         */
        SET QUANTITY_BEGIN = 0 + SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, TO_SPLIT_SYMBOL, 1);
        SET QUANTITY_END = NULL;

      ELSEIF ( POSITION(TO_SPLIT_SYMBOL IN QUANTITY_DETAILS_ITME) ) THEN

        /**
         * - 分割符
         */
        SET QUANTITY_BEGIN = 0 + SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, TO_SPLIT_SYMBOL, 1);
        SET QUANTITY_END = 0 + SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, TO_SPLIT_SYMBOL, -1);

      ELSEIF ( POSITION(AND_SPLIT_FLAG IN QUANTITY_DETAILS_ITME) ) THEN
        
        /**
         * and 分割符
         */
        SET FRONT_RANGE_ITEM = SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, AND_SPLIT_FLAG, 1);
        SET BACK_RANGE_ITEM = SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, AND_SPLIT_FLAG, -1);

        /**
         *更细一级的拆分
         */
        SET QUANTITY_BEGIN = ( SELECT FN_GET_QUANTITY_PART(FRONT_RANGE_ITEM) );
        SET QUANTITY_END = ( SELECT FN_GET_QUANTITY_PART(BACK_RANGE_ITEM) );
        
      ELSE

        IF ( POSITION(LOWER_OR_EQUAL_SPLIT_SYMBOL IN QUANTITY_DETAILS_ITME)) THEN

          SET QUANTITY_BEGIN = 1;
          -- SET QUANTITY_END = 0 + SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, LOWER_OR_EQUAL_SPLIT_SYMBOL, -1);

          SET QUANTITY_END = ( SELECT FN_GET_QUANTITY_PART(QUANTITY_DETAILS_ITME) );

        ELSEIF ( POSITION(GREATER_OR_EQUAL_SPLIT_SYMBOL IN QUANTITY_DETAILS_ITME) ) THEN

          SET QUANTITY_BEGIN = ( SELECT FN_GET_QUANTITY_PART(QUANTITY_DETAILS_ITME) );
          -- SET QUANTITY_BEGIN = 0 + SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, GREATER_OR_EQUAL_SPLIT_SYMBOL, -1);
          SET QUANTITY_END = NULL;

        ELSEIF ( POSITION(LOWER_SPLIT_SYMBOL IN QUANTITY_DETAILS_ITME) ) THEN

          SET QUANTITY_BEGIN = 1;
          -- SET QUANTITY_END = -1 + SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, LOWER_SPLIT_SYMBOL, -1);
          SET QUANTITY_END = ( SELECT FN_GET_QUANTITY_PART(QUANTITY_DETAILS_ITME) );

        ELSEIF ( POSITION(GREATER_SPLIT_SYMBOL IN QUANTITY_DETAILS_ITME)  ) THEN

           SET QUANTITY_BEGIN = ( SELECT FN_GET_QUANTITY_PART(QUANTITY_DETAILS_ITME) );
          -- SET QUANTITY_BEGIN = 1 + SUBSTRING_INDEX(QUANTITY_DETAILS_ITME, GREATER_SPLIT_SYMBOL, -1);
          SET QUANTITY_END = NULL;

        END IF;

      END IF;

      /**
       * 更新对应字段值。
       */
      UPDATE tariff_origin_rate_rules
      SET quantity_begin = QUANTITY_BEGIN, quantity_end = QUANTITY_END
      WHERE id = RATE_RULE_ID;

    END WHILE LABLE1; -- WHILE 循环结束。

  /**
   * 关闭游标
   */
  CLOSE QUANTITY_DETAILS_CURSOR;

END