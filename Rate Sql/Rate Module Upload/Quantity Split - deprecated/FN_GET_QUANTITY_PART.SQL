DROP FUNCTION IF EXISTS FN_GET_QUANTITY_PART;
CREATE FUNCTION FN_GET_QUANTITY_PART( PARAM_QUANTITY_PART_ITEM VARCHAR(64) ) RETURNS INT
                                        
BEGIN
  
  /**
   * @deprecated.
   * 这个 SQL 程序只集中处理四种分割符号， 返回 begin quantity 和 end quantity.
   */
  DECLARE LOWER_SPLIT_SYMBOL CHAR(1) DEFAULT '<';
  DECLARE GREATER_SPLIT_SYMBOL CHAR(1) DEFAULT '>';
  DECLARE LOWER_OR_EQUAL_SPLIT_SYMBOL CHAR(2) DEFAULT '<=';
  DECLARE GREATER_OR_EQUAL_SPLIT_SYMBOL CHAR(2) DEFAULT '>=';

  DECLARE QUANTITY_BEGIN_OR_END_ITEM INT;

  /**
   *更细一级的拆分， 判断的时候一定要注意先后顺序。
   */
  IF ( POSITION(LOWER_OR_EQUAL_SPLIT_SYMBOL IN PARAM_QUANTITY_PART_ITEM)) THEN

    SET QUANTITY_BEGIN_OR_END_ITEM = 
      0 + SUBSTRING_INDEX(PARAM_QUANTITY_PART_ITEM, LOWER_OR_EQUAL_SPLIT_SYMBOL, -1);

  ELSEIF ( POSITION(GREATER_OR_EQUAL_SPLIT_SYMBOL IN PARAM_QUANTITY_PART_ITEM) ) THEN

   SET QUANTITY_BEGIN_OR_END_ITEM = 
     0 + SUBSTRING_INDEX(PARAM_QUANTITY_PART_ITEM, GREATER_OR_EQUAL_SPLIT_SYMBOL, -1);

  ELSEIF ( POSITION(LOWER_SPLIT_SYMBOL IN PARAM_QUANTITY_PART_ITEM) ) THEN

    SET QUANTITY_BEGIN_OR_END_ITEM = 
      -1 + SUBSTRING_INDEX(PARAM_QUANTITY_PART_ITEM, LOWER_SPLIT_SYMBOL, -1);

  ELSEIF ( POSITION(GREATER_SPLIT_SYMBOL IN PARAM_QUANTITY_PART_ITEM) ) THEN

    SET QUANTITY_BEGIN_OR_END_ITEM = 
       1 + SUBSTRING_INDEX(PARAM_QUANTITY_PART_ITEM, GREATER_SPLIT_SYMBOL, -1);

  END IF;

  RETURN QUANTITY_BEGIN_OR_END_ITEM;
END;